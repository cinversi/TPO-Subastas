{"version":3,"sources":["utils.ts"],"names":["React","overlay","useTheme","Color","useLatest","value","valueRef","useRef","useEffect","current","useHeaderBackgroundColor","theme","dark","mode","colors","surface","primary","useHeaderColorIsLight","background","isLight","useHeaderTextColor","useTextColorOnPrimary","isDark","range","start","end","Array","fill","map","_","i"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,oBAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,SAAT,CAAsBC,KAAtB,EAAgC;AACrC,QAAMC,QAAQ,GAAGN,KAAK,CAACO,MAAN,CAAgBF,KAAhB,CAAjB;AACAL,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpBF,IAAAA,QAAQ,CAACG,OAAT,GAAmBJ,KAAnB;AACD,GAFD,EAEG,CAACA,KAAD,CAFH;AAGA,SAAOC,QAAP;AACD;AAED,OAAO,SAASI,wBAAT,GAAoC;AACzC,QAAMC,KAAK,GAAGT,QAAQ,EAAtB;AACA,SAAOS,KAAK,CAACC,IAAN,IAAcD,KAAK,CAACE,IAAN,KAAe,UAA7B,GACHZ,OAAO,CAAC,CAAD,EAAIU,KAAK,CAACG,MAAN,CAAaC,OAAjB,CADJ,GAEHJ,KAAK,CAACG,MAAN,CAAaE,OAFjB;AAGD;AAED,OAAO,SAASC,qBAAT,GAAiC;AACtC,QAAMN,KAAK,GAAGT,QAAQ,EAAtB;AACA,QAAMgB,UAAU,GACdP,KAAK,CAACC,IAAN,IAAcD,KAAK,CAACE,IAAN,KAAe,UAA7B,GACIF,KAAK,CAACG,MAAN,CAAaC,OADjB,GAEIJ,KAAK,CAACG,MAAN,CAAaE,OAHnB;AAIA,SAAOb,KAAK,CAACe,UAAD,CAAL,CAAkBC,OAAlB,EAAP;AACD;AAED,OAAO,SAASC,kBAAT,GAA8B;AACnC,QAAMD,OAAO,GAAGF,qBAAqB,EAArC;AACA,SAAO,CAACE,OAAD,GAAW,MAAX,GAAoB,MAA3B;AACD;AAED,OAAO,SAASE,qBAAT,GAAiC;AACtC,QAAMV,KAAK,GAAGT,QAAQ,EAAtB;AACA,QAAMoB,MAAM,GAAG,CAACnB,KAAK,CAACQ,KAAK,CAACG,MAAN,CAAaE,OAAd,CAAL,CAA4BG,OAA5B,EAAhB;AACA,SAAOG,MAAM,GAAG,MAAH,GAAY,MAAzB;AACD;AAED,OAAO,SAASC,KAAT,CAAeC,KAAf,EAA8BC,GAA9B,EAA2C;AAChD,SAAOC,KAAK,CAACD,GAAG,GAAGD,KAAN,GAAc,CAAf,CAAL,CACJG,IADI,CACC,IADD,EAEJC,GAFI,CAEA,CAACC,CAAD,EAAIC,CAAJ,KAAUN,KAAK,GAAGM,CAFlB,CAAP;AAGD","sourcesContent":["import * as React from 'react'\nimport { overlay, useTheme } from 'react-native-paper'\nimport Color from 'color'\n\nexport function useLatest<T>(value: T) {\n  const valueRef = React.useRef<T>(value)\n  React.useEffect(() => {\n    valueRef.current = value\n  }, [value])\n  return valueRef\n}\n\nexport function useHeaderBackgroundColor() {\n  const theme = useTheme()\n  return theme.dark && theme.mode === 'adaptive'\n    ? overlay(4, theme.colors.surface)\n    : theme.colors.primary\n}\n\nexport function useHeaderColorIsLight() {\n  const theme = useTheme()\n  const background =\n    theme.dark && theme.mode === 'adaptive'\n      ? theme.colors.surface\n      : theme.colors.primary\n  return Color(background).isLight()\n}\n\nexport function useHeaderTextColor() {\n  const isLight = useHeaderColorIsLight()\n  return !isLight ? '#fff' : '#000'\n}\n\nexport function useTextColorOnPrimary() {\n  const theme = useTheme()\n  const isDark = !Color(theme.colors.primary).isLight()\n  return isDark ? '#fff' : '#000'\n}\n\nexport function range(start: number, end: number) {\n  return Array(end - start + 1)\n    .fill(null)\n    .map((_, i) => start + i)\n}\n"]}