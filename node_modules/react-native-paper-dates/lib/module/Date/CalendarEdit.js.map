{"version":3,"sources":["CalendarEdit.tsx"],"names":["React","View","StyleSheet","Keyboard","TextInputWithMask","HelperText","useTheme","dateToUnix","isDateWithinOptionalRange","CalendarEdit","mode","state","label","startLabel","endLabel","collapsed","onChange","validRange","locale","dateInput","useRef","startInput","endInput","useEffect","dismiss","inputsToFocus","current","filter","n","inputsToBlur","forEach","ip","blur","focus","onSubmitStartInput","useCallback","onSubmitEndInput","onSubmitInput","styles","root","inner","date","startDate","separator","endDate","CalendarInputPure","value","isEndDate","returnKeyType","onSubmitEditing","ref","theme","error","setError","useState","formatter","useMemo","Intl","DateTimeFormat","month","day","year","inputFormat","inputDate","format","Date","replace","formattedValue","onChangeText","dayIndex","indexOf","monthIndex","yearIndex","Number","slice","isNaN","finalDate","validStart","validEnd","startUnix","undefined","endUnix","errors","join","inputContainer","input","dark","CalendarInput","forwardRef","create","padding","flexDirection","flex","width","memo"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport {\n  View,\n  StyleSheet,\n  TextInput as TextInputNative,\n  Keyboard,\n} from 'react-native'\n\nimport { CalendarDate, ModeType, ValidRangeType } from './Calendar'\nimport { LocalState } from './DatePickerModalContent'\nimport TextInputWithMask from '../TextInputMask'\nimport { HelperText, useTheme } from 'react-native-paper'\nimport { dateToUnix, isDateWithinOptionalRange } from './dateUtils'\n\nfunction CalendarEdit({\n  mode,\n  state,\n  label = '',\n  startLabel = 'Start',\n  endLabel = 'End',\n  collapsed,\n  onChange,\n  validRange,\n  locale,\n}: {\n  mode: ModeType\n  label?: string\n  startLabel?: string\n  endLabel?: string\n  state: LocalState\n  collapsed: boolean\n  onChange: (s: LocalState) => any\n  validRange: ValidRangeType | undefined\n  locale?: undefined | string\n}) {\n  const dateInput = React.useRef<TextInputNative | null>(null)\n  const startInput = React.useRef<TextInputNative | null>(null)\n  const endInput = React.useRef<TextInputNative | null>(null)\n\n  // when switching views focus, or un-focus text input\n  React.useEffect(() => {\n    // hide open keyboard\n    if (collapsed) {\n      Keyboard.dismiss()\n    }\n\n    const inputsToFocus = [dateInput.current, startInput.current].filter(\n      (n) => n\n    ) as TextInputNative[]\n\n    const inputsToBlur = [\n      dateInput.current,\n      startInput.current,\n      endInput.current,\n    ].filter((n) => n) as TextInputNative[]\n\n    if (collapsed) {\n      inputsToBlur.forEach((ip) => ip.blur())\n    } else {\n      inputsToFocus.forEach((ip) => ip.focus())\n    }\n  }, [mode, startInput, endInput, dateInput, collapsed])\n\n  const onSubmitStartInput = React.useCallback(() => {\n    if (endInput.current) {\n      endInput.current.focus()\n    }\n  }, [endInput])\n\n  const onSubmitEndInput = React.useCallback(() => {\n    // TODO: close modal and persist range\n  }, [])\n\n  const onSubmitInput = React.useCallback(() => {\n    // TODO: close modal and persist range\n  }, [])\n\n  return (\n    <View style={styles.root}>\n      <View style={styles.inner}>\n        {mode === 'single' ? (\n          <CalendarInput\n            ref={dateInput}\n            label={label}\n            value={state.date}\n            onChange={(date) => onChange({ ...state, date })}\n            onSubmitEditing={onSubmitInput}\n            validRange={validRange}\n            locale={locale}\n          />\n        ) : null}\n        {mode === 'range' ? (\n          <>\n            <CalendarInput\n              ref={startInput}\n              label={startLabel}\n              value={state.startDate}\n              onChange={(startDate) => onChange({ ...state, startDate })}\n              returnKeyType={'next'}\n              onSubmitEditing={onSubmitStartInput}\n              validRange={validRange}\n              locale={locale}\n            />\n            <View style={styles.separator} />\n            <CalendarInput\n              ref={endInput}\n              label={endLabel}\n              value={state.endDate}\n              onChange={(endDate) => onChange({ ...state, endDate })}\n              isEndDate\n              onSubmitEditing={onSubmitEndInput}\n              validRange={validRange}\n              locale={locale}\n            />\n          </>\n        ) : null}\n      </View>\n    </View>\n  )\n}\n\nfunction CalendarInputPure(\n  {\n    label,\n    value,\n    onChange,\n    isEndDate,\n    returnKeyType,\n    onSubmitEditing,\n    locale,\n    validRange,\n  }: {\n    locale?: undefined | string\n    label: string\n    value: CalendarDate\n    onChange: (d: Date | undefined) => any\n    isEndDate?: boolean\n    returnKeyType?: string\n    onSubmitEditing?: () => any\n    validRange: ValidRangeType | undefined\n  },\n  ref: any\n) {\n  const theme = useTheme()\n  const [error, setError] = React.useState<null | string>(null)\n  const formatter = React.useMemo(() => {\n    return new Intl.DateTimeFormat(locale, {\n      month: '2-digit',\n      day: '2-digit',\n      year: 'numeric',\n    })\n  }, [locale])\n\n  const inputFormat = React.useMemo(() => {\n    // TODO: something cleaner and more universal?\n    const inputDate = formatter.format(new Date(2020, 10 - 1, 1))\n    return inputDate\n      .replace('2020', 'YYYY')\n      .replace('10', 'MM')\n      .replace('01', 'DD')\n  }, [formatter])\n\n  const formattedValue = formatter.format(value)\n  const onChangeText = (date: string) => {\n    const dayIndex = inputFormat.indexOf('DD')\n    const monthIndex = inputFormat.indexOf('MM')\n    const yearIndex = inputFormat.indexOf('YYYY')\n\n    const day = Number(date.slice(dayIndex, dayIndex + 2))\n    const year = Number(date.slice(yearIndex, yearIndex + 4))\n    const month = Number(date.slice(monthIndex, monthIndex + 2))\n\n    if (Number.isNaN(day) || Number.isNaN(year) || Number.isNaN(month)) {\n      setError(inputFormat)\n      return\n    }\n\n    const finalDate = isEndDate\n      ? new Date(year, month - 1, day, 23, 59, 59)\n      : new Date(year, month - 1, day)\n\n    const validStart = validRange?.startDate\n    const validEnd = validRange?.endDate\n    if (\n      !isDateWithinOptionalRange(finalDate, {\n        startUnix: validStart ? dateToUnix(validStart) : undefined,\n        endUnix: validEnd ? dateToUnix(validEnd) : undefined,\n      })\n    ) {\n      let errors =\n        validStart && validEnd\n          ? [`${formatter.format(validStart)} - ${formatter.format(validEnd)}`]\n          : [\n              validStart ? `> ${formatter.format(validStart)}` : '',\n              validEnd ? `< ${formatter.format(validEnd)}` : '',\n            ]\n      setError(errors.filter((n) => n).join(' '))\n      return\n    }\n\n    setError(null)\n    if (isEndDate) {\n      onChange(finalDate)\n    } else {\n      onChange(finalDate)\n    }\n  }\n  return (\n    <View style={styles.inputContainer}>\n      <TextInputWithMask\n        ref={ref}\n        value={formattedValue}\n        style={styles.input}\n        label={`${label} (${inputFormat})`}\n        keyboardType={'number-pad'}\n        placeholder={inputFormat}\n        mask={inputFormat}\n        onChangeText={onChangeText}\n        returnKeyType={returnKeyType}\n        onSubmitEditing={onSubmitEditing}\n        keyboardAppearance={theme.dark ? 'dark' : 'default'}\n        error={!!error}\n      />\n      <HelperText type=\"error\" visible={!!error}>\n        {error}\n      </HelperText>\n    </View>\n  )\n}\n\nconst CalendarInput = React.forwardRef(CalendarInputPure)\n\nconst styles = StyleSheet.create({\n  root: { padding: 12 },\n  inner: { flexDirection: 'row' },\n  inputContainer: { flex: 1 },\n  input: { flex: 1 },\n  separator: { width: 12 },\n})\n\nexport default React.memo(CalendarEdit)\n"]}